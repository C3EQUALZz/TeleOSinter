"""
–ó–¥–µ—Å—å —è –ø–æ–ª—å–∑—É—é—Å—å —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π —Å–∫—Ä–∏–ø—Ç–∞ holehe https://github.com/megadose/holehe
–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ–Ω –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π, –ø–æ—ç—Ç–æ–º—É —è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª —Ç–∞–∫–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.
"""
import re
import asyncio


async def get_data_holehe(email: str) -> str:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∏—Å–ø–æ–ª—å–∑—É—è https://github.com/megadose/holehe
    :param email: –ø–æ—á—Ç–∞, –∫–æ—Ç–æ—Ä—É—é –≤–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    :return: —Å—Ç—Ä–æ–∫–∞, –≥–¥–µ —É–∫–∞–∑–∞–Ω–æ –Ω–∞ –∫–∞–∫–∏—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö –µ—Å—Ç—å –¥–∞–Ω–Ω–∞—è –ø–æ—á—Ç–∞
    """
    # –ó–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã –∏–∑-–ø–æ–¥ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    process = await asyncio.create_subprocess_exec(
        'holehe', email,
        stdout=asyncio.subprocess.PIPE,
        stderr=asyncio.subprocess.PIPE
    )

    stdout, stderr = await process.communicate()

    if process.returncode != 0:
        raise Exception(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {stderr}")

    return "üòà –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ holehe:\n" + '\n'.join(
        match.group()
        for match in re.finditer(r"\[.\].+", stdout.decode(), re.MULTILINE | re.IGNORECASE)
    )